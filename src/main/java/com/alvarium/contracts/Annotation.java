package com.alvarium.contracts;


import java.io.Serializable;
import java.time.Instant;

import com.alvarium.hash.HashType;
import com.alvarium.serializers.InstantConverter;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import de.huxhorn.sulky.ulid.ULID;

/**
 * A java bean that encapsulates all of the data related to a specific annotation.
 * this will be generated by the annotators.
 */
public class Annotation implements Serializable {
  private final String id; 
  private final String key;
  private final HashType hash;
  private final String host;
  private final AnnotationType kind;
  private final String signature;
  private final Boolean isSatisfied;
  private final Instant timestamp;

  public Annotation(String key, HashType hash, String host, AnnotationType kind, String signature,
      Boolean isSatisfied, Instant timestamp) {
    ULID ulid = new ULID();
    this.id = ulid.nextULID(); 
    this.key = key;
    this.hash = hash;
    this.host = host;
    this.kind = kind;
    this.signature = signature;
    this.isSatisfied = isSatisfied;
    this.timestamp = timestamp;  
    }

    // getters

    public String getId() {
      return this.id;
    }

    public String getKey() {
      return this.key;
    }

    public HashType getHash() {
      return this.hash;
    }
    
    public String getHost() {
      return this.host;
    }

    public AnnotationType getKind() {
      return this.kind;
    }

    public String getSignature() {
      return this.signature;
    }

    public Boolean getIsSatisfied() {
      return this.isSatisfied;
    }

    public Instant getTimestamp() {
      return this.timestamp;
    }

    /**
     * returns the JSON representation of the Annotation object 
     * @return json string representation
     */ 
    public String toJson() {
      Gson gson = new GsonBuilder().registerTypeAdapter(Instant.class, new InstantConverter())
          .create();
      return gson.toJson(this, Annotation.class);
    }

   /**
    * instaniates an Annotation object from a json representation
    * @param json input JSON string
    * @return Annotation Object
    */  
    public static Annotation fromJson(String json) {
      Gson gson = new GsonBuilder().registerTypeAdapter(Instant.class, new InstantConverter())
          .create();
      return gson.fromJson(json, Annotation.class);
    }
}
